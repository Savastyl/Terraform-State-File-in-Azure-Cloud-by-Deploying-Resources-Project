{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancers_tf_lb_name": {
            "defaultValue": "tf-lb",
            "type": "String"
        },
        "virtualNetworks_tf_vnet_name": {
            "defaultValue": "tf-vnet",
            "type": "String"
        },
        "storageAccounts_terrasavas_name": {
            "defaultValue": "terrasavas",
            "type": "String"
        },
        "availabilitySets_tf_avail_set_name": {
            "defaultValue": "tf-avail-set",
            "type": "String"
        },
        "virtualMachines_tf_instance_0_name": {
            "defaultValue": "tf-instance-0",
            "type": "String"
        },
        "virtualMachines_tf_instance_1_name": {
            "defaultValue": "tf-instance-1",
            "type": "String"
        },
        "publicIPAddresses_tf_public_ip_name": {
            "defaultValue": "tf-public-ip",
            "type": "String"
        },
        "networkInterfaces_tf_interface_0_name": {
            "defaultValue": "tf-interface-0",
            "type": "String"
        },
        "networkInterfaces_tf_interface_1_name": {
            "defaultValue": "tf-interface-1",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-05-01",
            "name": "[parameters('publicIPAddresses_tf_public_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.168.241.76",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccounts_terrasavas_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "identity": {
                "type": "None"
            },
            "properties": {
                "isNfsV3Enabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": false,
                "networkAcls": {
                    "bypass": "None",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('loadBalancers_tf_lb_name'), '/', parameters('loadBalancers_tf_lb_name'), '-pool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-05-01",
            "name": "[parameters('networkInterfaces_tf_interface_0_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "tf-ip-0",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_0_name')), '/ipConfigurations/tf-ip-0')]",
                        "etag": "W/\"0eb0c2c3-bf10-4cba-9f43-684e03a9c90d\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-05-01",
            "name": "[parameters('networkInterfaces_tf_interface_1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "tf-ip-1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_1_name')), '/ipConfigurations/tf-ip-1')]",
                        "etag": "W/\"31415bfe-2103-43b5-a351-6b060b74825d\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.1.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('virtualNetworks_tf_vnet_name'), '/backend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_tf_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('virtualNetworks_tf_vnet_name'), '/dmz')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_tf_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.3.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('virtualNetworks_tf_vnet_name'), '/frontend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_tf_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2022-08-01",
            "name": "[parameters('availabilitySets_tf_avail_set_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_tf_instance_0_name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_tf_instance_1_name'))]"
            ],
            "tags": {
                "environment": "Production"
            },
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": 3,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_tf_instance_0_name'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_tf_instance_1_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[parameters('virtualMachines_tf_instance_0_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_tf_avail_set_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_0_name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_tf_avail_set_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "tf-osdisk-0",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "writeAcceleratorEnabled": false,
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', 'tf-osdisk-0')]"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "tf-datadisk-0",
                            "createOption": "Empty",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS",
                                "id": "[resourceId('Microsoft.Compute/disks', 'tf-datadisk-0')]"
                            },
                            "deleteOption": "Detach",
                            "diskSizeGB": 1023,
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_tf_instance_0_name')]",
                    "adminUsername": "demo",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_0_name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[parameters('virtualMachines_tf_instance_1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_tf_avail_set_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_1_name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_tf_avail_set_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "tf-osdisk-1",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "writeAcceleratorEnabled": false,
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', 'tf-osdisk-1')]"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "tf-datadisk-1",
                            "createOption": "Empty",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS",
                                "id": "[resourceId('Microsoft.Compute/disks', 'tf-datadisk-1')]"
                            },
                            "deleteOption": "Detach",
                            "diskSizeGB": 1023,
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_tf_instance_1_name')]",
                    "adminUsername": "demo",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_tf_interface_1_name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-05-01",
            "name": "[parameters('loadBalancers_tf_lb_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_tf_public_ip_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), '/frontendIPConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_tf_public_ip_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat(parameters('loadBalancers_tf_lb_name'), '-pool')]",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancers_tf_lb_name'), '-rule-80')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/loadBalancingRules/', parameters('loadBalancers_tf_lb_name'), '-rule-80'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), '/frontendIPConfigurations/default')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/probes/', parameters('loadBalancers_tf_lb_name'), '-probe-80'))]"
                            }
                        }
                    },
                    {
                        "name": "[concat(parameters('loadBalancers_tf_lb_name'), '-rule-443')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/loadBalancingRules/', parameters('loadBalancers_tf_lb_name'), '-rule-443'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), '/frontendIPConfigurations/default')]"
                            },
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_tf_lb_name'), concat(parameters('loadBalancers_tf_lb_name'), '-pool'))]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/probes/', parameters('loadBalancers_tf_lb_name'), '-probe-443'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancers_tf_lb_name'), '-probe-80')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/probes/', parameters('loadBalancers_tf_lb_name'), '-probe-80'))]",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    },
                    {
                        "name": "[concat(parameters('loadBalancers_tf_lb_name'), '-probe-443')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_tf_lb_name')), concat('/probes/', parameters('loadBalancers_tf_lb_name'), '-probe-443'))]",
                        "properties": {
                            "protocol": "Http",
                            "port": 443,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default/tf-storage-container-0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_terrasavas_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('storageAccounts_terrasavas_name'), '/default/tf-storage-container-1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_terrasavas_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_terrasavas_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[parameters('virtualNetworks_tf_vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'backend')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'dmz')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "backend",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'backend')]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "dmz",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'dmz')]",
                        "properties": {
                            "addressPrefix": "10.0.3.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "frontend",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tf_vnet_name'), 'frontend')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        }
    ]
}